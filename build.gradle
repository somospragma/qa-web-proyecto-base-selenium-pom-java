
plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}
group 'CursoUdemy'

sourceCompatibility = 1.8

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.2'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.1.1-jre'

    // https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java
    implementation group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '4.2.2'

    // https://mvnrepository.com/artifact/io.cucumber/cucumber-java
    implementation group: 'io.cucumber', name: 'cucumber-java', version: '7.4.0'

    // https://mvnrepository.com/artifact/io.cucumber/cucumber-junit
    testImplementation group: 'io.cucumber', name: 'cucumber-junit', version: '7.4.0'

    // https://mvnrepository.com/artifact/io.github.bonigarcia/webdrivermanager
    implementation group: 'io.github.bonigarcia', name: 'webdrivermanager', version: '5.2.0'

    // https://mvnrepository.com/artifact/org.slf4j/slf4j-simple
    testImplementation group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.25'

    //para los reportes
    // https://mvnrepository.com/artifact/tech.grasshopper/extentreports-cucumber7-adapter
    implementation group: 'tech.grasshopper', name: 'extentreports-cucumber7-adapter', version: '1.7.0'

    implementation 'io.github.bonigarcia:webdrivermanager:5.3.2'

    testRuntimeOnly("org.junit.vintage:junit-vintage-engine")
    
}

//para ejecutar test desde linea de comandos
configurations {
    cucumberRuntime {
        extendsFrom testImplementation
    }
}

test {
    systemProperty "cucumber.options", System.getProperty("cucumber.options")
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
tasks.withType(Test) {
    systemProperties = System.getProperties()
}

task testSuite(type: Test) {
    include '**/YourTestSuite.class'
    outputs.upToDateWhen { false }
}

compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"